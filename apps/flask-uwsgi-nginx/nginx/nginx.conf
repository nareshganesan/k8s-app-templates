# user  nginx;
worker_processes  1;

pid        /tmp/logs/nginx.pid;


events {
  multi_accept on;
  use epoll;
  worker_connections  1024;  # Default: 1024
}

http {   

    sendfile            off;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;
    keepalive_timeout   60;
    types_hash_max_size 2048;

    # `gzip` Settings
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    # Expires map
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;
    } 

    include       mime.types;
    default_type  application/octet-stream;

    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    ssl_certificate   /opt/ssl/server.crt;
    ssl_certificate_key  /opt/ssl/server.key;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options SAMEORIGIN;
    # add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;
    add_header X-Download-Options noopen;
    add_header X-Permitted-Cross-Domain-Policies none;   

    server {
        listen       80;
        listen       [::]:80 ipv6only=on;
        server_name  localhost;
        expires $expires;

        access_log /tmp/logs/nginx_access.log;
        error_log /tmp/logs/nginx_error.log debug;         

        location / {
            rewrite ^ https://$server_name$request_uri permanent;
        }       

        location ~ /\.ht {
           deny  all;
        }
    }

    # Settings for a TLS enabled server.
    server {
        listen       443 ssl;
        listen  [::]:443 ssl ipv6only=on;
        server_name  localhost;
        expires $expires;     

        access_log /tmp/logs/nginx_access.log;
        error_log /tmp/logs/nginx_error.log debug;        

        location / { try_files $uri @flaskApp; }
        location @flaskApp {
            include uwsgi_params;
            uwsgi_pass unix:///tmp/app.sock;
        }             

        error_page 404 /404.html;
           location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
           location = /50x.html {
        }

        location ~ /\.ht {
           deny  all;
        }

   }

}
